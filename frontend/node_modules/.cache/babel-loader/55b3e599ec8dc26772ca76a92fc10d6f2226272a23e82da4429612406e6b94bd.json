{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep Rao\\\\Desktop\\\\ASP-React App\\\\frontend\\\\src\\\\components\\\\jobs\\\\JobsGrid.component.tsx\";\nimport { Box } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport moment from \"moment\";\nimport \"./jobs-grid.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst column = [{\n  field: \"id\",\n  headerName: \"ID\",\n  width: 100\n}, {\n  field: \"title\",\n  headerName: \"Title\",\n  width: 500\n}, {\n  field: \"level\",\n  headerName: \"Level\",\n  width: 150\n}, {\n  field: \"companyName\",\n  headerName: \"Company name\",\n  width: 150\n}, {\n  field: \"createdAt\",\n  headerName: \"Creation Time\",\n  width: 200,\n  renderCell: params => moment(params.row.createdAt).fromNow()\n}];\nconst JobsGrid = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"100%\",\n      height: 450\n    },\n    className: \"jobs-grid\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: data,\n      columns: column,\n      getRowId: row => row.id,\n      rowHeight: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = JobsGrid;\nexport default JobsGrid;\nvar _c;\n$RefreshReg$(_c, \"JobsGrid\");","map":{"version":3,"names":["Box","DataGrid","moment","jsxDEV","_jsxDEV","column","field","headerName","width","renderCell","params","row","createdAt","fromNow","JobsGrid","data","sx","height","className","children","rows","columns","getRowId","id","rowHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep Rao/Desktop/ASP-React App/frontend/src/components/jobs/JobsGrid.component.tsx"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\r\nimport moment from \"moment\";\r\nimport { IJob } from \"../../types/global.typing\";\r\nimport \"./jobs-grid.scss\";\r\n\r\nconst column: GridColDef[] = [\r\n  { field: \"id\", headerName: \"ID\", width: 100 },\r\n  { field: \"title\", headerName: \"Title\", width: 500 },\r\n  { field: \"level\", headerName: \"Level\", width: 150 },\r\n  { field: \"companyName\", headerName: \"Company name\", width: 150 },\r\n  {\r\n    field: \"createdAt\",\r\n    headerName: \"Creation Time\",\r\n    width: 200,\r\n    renderCell: (params) => moment(params.row.createdAt).fromNow(),\r\n  },\r\n];\r\n\r\ninterface IjobsGridProps {\r\n  data: IJob[];\r\n}\r\n\r\nconst JobsGrid = ({ data }: IjobsGridProps) => {\r\n  return (\r\n    <Box sx={{ width: \"100%\", height: 450 }} className=\"jobs-grid\">\r\n      <DataGrid\r\n        rows={data}\r\n        columns={column}\r\n        getRowId={(row) => row.id}\r\n        rowHeight={50}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default JobsGrid;\r\n"],"mappings":";AAAA,SAASA,GAAG,QAAQ,eAAe;AACnC,SAASC,QAAQ,QAAoB,kBAAkB;AACvD,OAAOC,MAAM,MAAM,QAAQ;AAE3B,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAoB,GAAG,CAC3B;EAAEC,KAAK,EAAE,IAAI;EAAEC,UAAU,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAI,CAAC,EAC7C;EAAEF,KAAK,EAAE,OAAO;EAAEC,UAAU,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAI,CAAC,EACnD;EAAEF,KAAK,EAAE,OAAO;EAAEC,UAAU,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAI,CAAC,EACnD;EAAEF,KAAK,EAAE,aAAa;EAAEC,UAAU,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAI,CAAC,EAChE;EACEF,KAAK,EAAE,WAAW;EAClBC,UAAU,EAAE,eAAe;EAC3BC,KAAK,EAAE,GAAG;EACVC,UAAU,EAAGC,MAAM,IAAKR,MAAM,CAACQ,MAAM,CAACC,GAAG,CAACC,SAAS,CAAC,CAACC,OAAO,CAAC;AAC/D,CAAC,CACF;AAMD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAqB,CAAC,KAAK;EAC7C,oBACEX,OAAA,CAACJ,GAAG;IAACgB,EAAE,EAAE;MAAER,KAAK,EAAE,MAAM;MAAES,MAAM,EAAE;IAAI,CAAE;IAACC,SAAS,EAAC,WAAW;IAAAC,QAAA,eAC5Df,OAAA,CAACH,QAAQ;MACPmB,IAAI,EAAEL,IAAK;MACXM,OAAO,EAAEhB,MAAO;MAChBiB,QAAQ,EAAGX,GAAG,IAAKA,GAAG,CAACY,EAAG;MAC1BC,SAAS,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAXIf,QAAQ;AAad,eAAeA,QAAQ;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}